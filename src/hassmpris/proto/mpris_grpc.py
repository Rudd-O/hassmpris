# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: mpris.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.empty_pb2
from hassmpris.proto import mpris_pb2


class MPRISBase(abc.ABC):

    @abc.abstractmethod
    async def Ping(self, stream: 'grpclib.server.Stream[google.protobuf.empty_pb2.Empty, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def Updates(self, stream: 'grpclib.server.Stream[mpris_pb2.MPRISUpdateRequest, mpris_pb2.MPRISUpdateReply]') -> None:
        pass

    @abc.abstractmethod
    async def ChangePlayerStatus(self, stream: 'grpclib.server.Stream[mpris_pb2.ChangePlayerStatusRequest, mpris_pb2.ChangePlayerStatusReply]') -> None:
        pass

    @abc.abstractmethod
    async def Next(self, stream: 'grpclib.server.Stream[mpris_pb2.NextRequest, mpris_pb2.NextReply]') -> None:
        pass

    @abc.abstractmethod
    async def Previous(self, stream: 'grpclib.server.Stream[mpris_pb2.PreviousRequest, mpris_pb2.PreviousReply]') -> None:
        pass

    @abc.abstractmethod
    async def Seek(self, stream: 'grpclib.server.Stream[mpris_pb2.SeekRequest, mpris_pb2.SeekReply]') -> None:
        pass

    @abc.abstractmethod
    async def SetPosition(self, stream: 'grpclib.server.Stream[mpris_pb2.SetPositionRequest, mpris_pb2.SetPositionReply]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/MPRIS.MPRIS/Ping': grpclib.const.Handler(
                self.Ping,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.protobuf.empty_pb2.Empty,
                google.protobuf.empty_pb2.Empty,
            ),
            '/MPRIS.MPRIS/Updates': grpclib.const.Handler(
                self.Updates,
                grpclib.const.Cardinality.UNARY_STREAM,
                mpris_pb2.MPRISUpdateRequest,
                mpris_pb2.MPRISUpdateReply,
            ),
            '/MPRIS.MPRIS/ChangePlayerStatus': grpclib.const.Handler(
                self.ChangePlayerStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                mpris_pb2.ChangePlayerStatusRequest,
                mpris_pb2.ChangePlayerStatusReply,
            ),
            '/MPRIS.MPRIS/Next': grpclib.const.Handler(
                self.Next,
                grpclib.const.Cardinality.UNARY_UNARY,
                mpris_pb2.NextRequest,
                mpris_pb2.NextReply,
            ),
            '/MPRIS.MPRIS/Previous': grpclib.const.Handler(
                self.Previous,
                grpclib.const.Cardinality.UNARY_UNARY,
                mpris_pb2.PreviousRequest,
                mpris_pb2.PreviousReply,
            ),
            '/MPRIS.MPRIS/Seek': grpclib.const.Handler(
                self.Seek,
                grpclib.const.Cardinality.UNARY_UNARY,
                mpris_pb2.SeekRequest,
                mpris_pb2.SeekReply,
            ),
            '/MPRIS.MPRIS/SetPosition': grpclib.const.Handler(
                self.SetPosition,
                grpclib.const.Cardinality.UNARY_UNARY,
                mpris_pb2.SetPositionRequest,
                mpris_pb2.SetPositionReply,
            ),
        }


class MPRISStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Ping = grpclib.client.UnaryUnaryMethod(
            channel,
            '/MPRIS.MPRIS/Ping',
            google.protobuf.empty_pb2.Empty,
            google.protobuf.empty_pb2.Empty,
        )
        self.Updates = grpclib.client.UnaryStreamMethod(
            channel,
            '/MPRIS.MPRIS/Updates',
            mpris_pb2.MPRISUpdateRequest,
            mpris_pb2.MPRISUpdateReply,
        )
        self.ChangePlayerStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/MPRIS.MPRIS/ChangePlayerStatus',
            mpris_pb2.ChangePlayerStatusRequest,
            mpris_pb2.ChangePlayerStatusReply,
        )
        self.Next = grpclib.client.UnaryUnaryMethod(
            channel,
            '/MPRIS.MPRIS/Next',
            mpris_pb2.NextRequest,
            mpris_pb2.NextReply,
        )
        self.Previous = grpclib.client.UnaryUnaryMethod(
            channel,
            '/MPRIS.MPRIS/Previous',
            mpris_pb2.PreviousRequest,
            mpris_pb2.PreviousReply,
        )
        self.Seek = grpclib.client.UnaryUnaryMethod(
            channel,
            '/MPRIS.MPRIS/Seek',
            mpris_pb2.SeekRequest,
            mpris_pb2.SeekReply,
        )
        self.SetPosition = grpclib.client.UnaryUnaryMethod(
            channel,
            '/MPRIS.MPRIS/SetPosition',
            mpris_pb2.SetPositionRequest,
            mpris_pb2.SetPositionReply,
        )
